// C++ Lab 3.2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

// 3. Создаём функции для суммы и разности
int sum(int a, int b) {
    return a + b;
}

int diff(int a, int b) {
    return a - b;
}

// 1. Создаём функцию, которая принимает 2 указателя (на начало и конец массива) и возвращает сумму
int sumArray(int* start, int* end) {
    int sum = 0;
    while (start != end) {
        sum += *start;
        ++start;
    }
    return sum;
}

// 4-5. Создаём функцию, которая принимает параметр типа char и возвращает нужную ф-цию в зависимости от знака
int (*getFunction(char op))(int, int) {
    if (op == '+') {
        return sum;  // Возвращаем указатель на функцию sum
    }
    else if (op == '-') {
        return diff; // Возвращаем указатель на функцию diff
    }
    else {
        return nullptr; // Неверная операция
    }
}

// 7. Создаём динамический указатель типа float
float* createFloat() {
    float* ptr = new float(3.14f); // Выделяем память и инициализируем
    return ptr;
}

int main() {
    std::setlocale(LC_ALL, "ru");

    // 2. Проверяем работу функции sumArray
    int arr[] = { 1, 5, 2, 7, 11 };
    int size = sizeof(arr) / sizeof(arr[0]);
    int total = sumArray(arr, arr + size);
    std::cout << "Сумма элементов массива: " << total << std::endl;

    // 6. Проверяем работу функций через указатели
    char operation = '+';
    int (*funcPtr)(int, int) = getFunction(operation);

    if (funcPtr != nullptr) {
        int result = funcPtr(10, 5); // Вызываем функцию через указатель
        std::cout << "\nРезультат: " << result << std::endl;
    }

    // 8. Выводим динамический указатель float 
    float* dynamicFloat = createFloat();
    std::cout << "\nЗначение динамического float: " << *dynamicFloat << std::endl;

    delete dynamicFloat; // Удаляем из памяти

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
