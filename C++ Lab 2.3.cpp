// C++ Lab 2.3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

// 10. Создаём функцию, которая принимает число и возвращает 0, если число 0 или отрицательное
// Либо сумму чисел от 1 до данного числа, если оно положительное
int calculateSum(int n) { // 11. Делаем n = 1 и видим, что вызов функции без параметра даёт 1
    if (n <= 0) {
        return 0;
    }
    else {
        int sum = 0;
        for (int i = 1; i <= n; ++i) {
            sum += i;
        }
        return sum;
    }
}

// 12. Создаём функцию, которая принимает 4 значения. 2 последних передаются по ссылке
void processNumbers(int a, int b, int& sumRef, int& productRef) {
    
    // 13. Записываем в ссылки сумму и произведение 2 первых параметров
    sumRef = a + b; 
    productRef = a * b;
}


int main()
{
    std::setlocale(LC_ALL, "ru");

    // 1. Создаём двумерный массив размером 2x3 целых чисел
    int matrix[2][3] = {
    {12, 5, 9},
    {4, 7, 11}
    };

    // 2. Выводим сумму всех чисел созданного массива
    int sum = 0;
    for (int i = 0; i < 2; ++i) {
        for (int j = 0; j < 3; ++j) {
            sum += matrix[i][j];
        }
    }
    std::cout << "Сумма всех чисел: " << sum << std::endl;

    // 3. Создаём одномерный массив из 3-х элементов
    int columnSums[3] = { 0, 0, 0 }; // Инициализируем нулями

    // 4. Записываем в этот массив сумму чисел из столбцов двумерного массива
    for (int j = 0; j < 3; ++j) {
        for (int i = 0; i < 2; ++i) {
            columnSums[j] += matrix[i][j];
        }
    }

    // 5. Выводим получившийся одномерный массив
    std::cout << "Суммы столбцов: ";
    for (int j = 0; j < 3; ++j) {
        std::cout << columnSums[j] << " ";
    }
    std::cout << std::endl;

    // 6. Создаём переменную типа float = 20.84
    float myFloat = 20.84f;

    // 7. Создаём 2 ссылки на эту переменную
    float& ref1 = myFloat;
    float& ref2 = myFloat;

    // 8. Меняем значение у ссылки на новое
    ref1 = 99.99f;

    // 9. Выводим и проверяем что переменная и другая ссылка тоже изменили значения
    std::cout << "myFloat = " << myFloat << std::endl;
    std::cout << "ref1 = " << ref1 << std::endl;
    std::cout << "ref2 = " << ref2 << std::endl;
    
    // 11. Вызов функции без параметра для проверки
    //std::cout << calculateSum() << std::endl;

    // 14. Вызываем функцию и видим, что значения переменных переданных по ссылке 
    // после вызова функции изменились
    int sumResult, productResult;
    processNumbers(3, 4, sumResult, productResult);
    std::cout << "Сумма: " << sumResult << ", Произведение: " << productResult << std::endl;

    // 15. Создаём переменную типа int с значением 42
    int anyVar = 42;
    std::cout << "Любая переменная: " << anyVar << std::endl;

    // 16. Создаём цикл и выводим внутри него переменную из 1-го пункта 3 раза
    for (int i = 0; i < 3; ++i) {
        std::cout << "Элемент [0][0]: " << matrix[0][0] << std::endl;
        int tempVar = i * 10; //17. Новая переменная внутри цикла
        std::cout << "Временная переменная: " << tempVar << std::endl;
        // 18. tempVar вызывается 3 раза
    }

    //std::cout << "Временная переменная: " << tempVar << std::endl; 
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
